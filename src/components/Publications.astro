---
import { siteConfig } from "../config";
const pubs = siteConfig.publications ?? [];

const profiles = {
  scholar: siteConfig.social?.googleScholar || null,
  orcid: siteConfig.social?.orcid || null,
  inspire: siteConfig.social?.inspire || null,
  ads: siteConfig.social?.ads || null,
};
---
<section id="publications" class="max-w-6xl mx-auto px-6 py-12">
  <header class="flex items-center justify-between mb-6">
    <div>
      <h2 class="text-2xl" style="font-family:var(--heading-font); font-weight:400; color: rgba(var(--text-color),1);">Publications</h2>
      <p class="text-sm text-muted" style="font-family:var(--body-font);">Selected papers, preprints and published work.</p>
    </div>

    <div class="flex items-center gap-3">
      {profiles.scholar && (
        <a href={profiles.scholar} target="_blank" rel="noopener noreferrer" aria-label="Google Scholar" class="icon-chip" title="Google Scholar">
          <img src="/logos/scholar-logo.svg" alt="Google Scholar" class="h-5 w-5" />
        </a>
      )}
      {profiles.orcid && (
        <a href={profiles.orcid} target="_blank" rel="noopener noreferrer" aria-label="ORCID" class="icon-chip" title="ORCID">
          <img src="/logos/orcid-logo.svg" alt="ORCID" class="h-5 w-5" />
        </a>
      )}
      {profiles.inspire && (
        <a href={profiles.inspire} target="_blank" rel="noopener noreferrer" aria-label="InspireHEP" class="icon-chip" title="InspireHEP">
          <img src="/logos/inspire-logo.svg" alt="Inspire HEP" class="h-5 w-5" />
        </a>
      )}
      {profiles.ads && (
        <a href={profiles.ads} target="_blank" rel="noopener noreferrer" aria-label="NASA-ADS" class="icon-chip" title="ADS">
          <img src="/logos/ads-logo.svg" alt="ADS" class="h-5 w-5" />
        </a>
      )}
    </div>
  </header>

  <div class="mb-4 flex gap-3">
    <button class="pub-filter active px-3 py-1 rounded-md border card-surface text-sm" data-cat="All">All</button>
    <button class="pub-filter px-3 py-1 rounded-md border card-surface text-sm" data-cat="published">Published</button>
    <button class="pub-filter px-3 py-1 rounded-md border card-surface text-sm" data-cat="preprint">Preprint</button>
  </div>

  <div id="pubList" class="space-y-4">
    {pubs.length === 0 ? (
      <div class="text-muted">No publications added in <code>src/config.ts</code>. Add them under <code>siteConfig.publications</code>.</div>
    ) : (
      pubs.map(pub => {
        const cat = (pub.category || 'preprint').toLowerCase();
        const hasPdf = !!(pub.pdf && pub.pdf.trim());
        const hasArxiv = !!(pub.arxiv && pub.arxiv.trim());
        const hasBib = !!(pub.bibtex && pub.bibtex.trim());
        const hasDoi = !!(pub.doi && pub.doi.trim());
        const openArxivOnCard = (!hasPdf && hasArxiv);
        return (
          <article
            data-category={cat}
            class={`p-4 rounded-lg border card-surface pub-article ${openArxivOnCard ? 'is-clickable' : ''}`}
            data-arxiv={hasArxiv ? `https://arxiv.org/abs/${pub.arxiv}` : ''}
            key={pub.id ?? pub.title}
          >
            <div class="flex items-start justify-between gap-3">
              <div class="flex-1">
                <div class="leading-tight" style="font-family: var(--heading-font); font-weight:500; color: rgba(var(--text-color),1);">
                  {pub.title}
                </div>
                <div class="text-sm text-muted mt-1" style="font-family: var(--body-font);">
                  {pub.authors}{pub.venue ? ` - ${pub.venue}` : ''}{pub.year ? `, ${pub.year}` : ''}
                </div>

                {hasDoi && (
                  <div class="text-xs mt-1" style="font-family: var(--body-font);">
                    <a
                      href={`https://doi.org/${pub.doi.replace(/^doi:\s*/i,'')}`}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-xs"
                      style="color: var(--accent-color); text-decoration: none;"
                    >
                      doi: {pub.doi.replace(/^doi:\s*/i,'')}
                    </a>
                  </div>
                )}

                {pub.note && <div class="text-xs text-muted mt-1">{pub.note}</div>}
              </div>

              <div class="flex flex-col items-end gap-2">
                <span class="px-2 py-1 rounded-md text-xs" style="background: rgba(var(--card-bg-rgb),0.9); font-family:var(--body-font);">{pub.category ?? 'preprint'}</span>

                <div class="flex items-center gap-2">
                  {hasPdf ? (
                    <a href={pub.pdf} target="_blank" rel="noopener noreferrer" class="icon-chip" aria-label="PDF" title="Open PDF" onClick={(e) => e.stopPropagation()}>
                      <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.6"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/><path d="M14 2v6h6" /></svg>
                    </a>
                  ) : null}

                  {hasBib ? (
                    <button
                      type="button"
                      class="icon-chip bib-open-btn"
                      title="Open BibTeX"
                      aria-label="Open BibTeX"
                      onClick={(e) => { e.stopPropagation(); openBibModal(pub.bibtex ?? '', pub.title ?? 'BibTeX'); }}
                    >
                      <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.6">
                        <path d="M4 4h8v16H4z" />
                        <path d="M12 8h4M12 12h4M12 16h4" />
                      </svg>
                    </button>
                  ) : null}

                  {hasArxiv && (
                    <a href={`https://arxiv.org/abs/${pub.arxiv}`} target="_blank" rel="noopener noreferrer" class="icon-chip" aria-label="arXiv" title="View on arXiv" onClick={(e) => e.stopPropagation()}>
                      <img src="/logos/arxiv-logo.svg" alt="arXiv" class="h-4 w-4" />
                    </a>
                  )}
                </div>
              </div>
            </div>
          </article>
        );
      })
    )}
  </div>

  <div id="bibModal" class="bib-modal" aria-hidden="true" role="dialog" aria-modal="true" style="display:none;">
    <div class="bib-overlay" data-bib-close>
      <div class="bib-panel" role="document" aria-labelledby="bibTitle">
        <div class="bib-header">
          <h3 id="bibTitle" class="text-lg" style="font-family:var(--heading-font); font-weight:500;">BibTeX</h3>
          <button type="button" class="bib-close-btn" aria-label="Close BibTeX" data-bib-close>&times;</button>
        </div>
        <div class="bib-body">
          <textarea id="bibContent" readonly rows="10" style="width:100%; font-family: var(--mono-font); font-size:0.95rem; padding:0.6rem; border-radius:8px; border:1px solid rgba(var(--muted-text-color),0.06)"></textarea>
        </div>
        <div class="bib-actions" style="display:flex; gap:0.5rem; margin-top:0.65rem;">
          <button type="button" id="bibSelectBtn" class="icon-chip" aria-label="Select all BibTeX">Select</button>
          <button type="button" id="bibCopyBtn" class="icon-chip" aria-label="Copy BibTeX">Copy</button>
          <a id="bibDownloadLink" class="icon-chip" style="margin-left:auto;" download="publication.bib">Download</a>
        </div>
      </div>
    </div>
  </div>

  <script is:inline>
    (function(){
      // Filters
      const buttons = Array.from(document.querySelectorAll('.pub-filter'));
      const items = Array.from(document.querySelectorAll('#pubList > article[data-category]'));
      function setActive(btn) {
        buttons.forEach(b => b.classList.toggle('active', b === btn));
      }
      function filter(cat) {
        items.forEach(it => {
          if (cat === 'All' || it.getAttribute('data-category') === cat.toLowerCase()) it.style.display = '';
          else it.style.display = 'none';
        });
      }
      buttons.forEach(b => {
        b.addEventListener('click', () => {
          setActive(b);
          filter(b.getAttribute('data-cat'));
        });
      });

      document.querySelectorAll('.pub-article.is-clickable').forEach(article => {
        article.style.cursor = 'pointer';
        const arxiv = article.getAttribute('data-arxiv');
        if (!arxiv) return;
        article.addEventListener('click', (ev) => {
          if (ev.target.closest && (ev.target.closest('a') || ev.target.closest('button'))) return;
          window.open(arxiv, '_blank');
        });
      });

      // BibTeX modal functionality
      const modal = document.getElementById('bibModal');
      const overlay = modal && modal.querySelector('.bib-overlay');
      const bibContent = document.getElementById('bibContent');
      const copyBtn = document.getElementById('bibCopyBtn');
      const selectBtn = document.getElementById('bibSelectBtn');
      const downloadLink = document.getElementById('bibDownloadLink');

      window.openBibModal = function(bib, title) {
        try {
          if (!modal) return;
          bibContent.value = bib || '';
          modal.style.display = 'block';
          modal.setAttribute('aria-hidden', 'false');
          // download link content
          const blob = new Blob([bib || ''], { type: 'text/plain' });
          const url = URL.createObjectURL(blob);
          downloadLink.href = url;
          downloadLink.download = (title ? title.replace(/\s+/g,'_') : 'publication') + '.bib';
          // focus textarea
          setTimeout(() => {
            bibContent.focus();
            bibContent.select();
          }, 40);
        } catch(e){}
      };

      function closeModal() {
        try {
          if (!modal) return;
          modal.style.display = 'none';
          modal.setAttribute('aria-hidden', 'true');
          // revoke URL created for download
          if (downloadLink && downloadLink.href && downloadLink.href.startsWith('blob:')) {
            URL.revokeObjectURL(downloadLink.href);
            downloadLink.href = '';
          }
        } catch(e){}
      }

      document.addEventListener('click', (ev) => {
        const closeBtn = ev.target.closest && ev.target.closest('[data-bib-close]');
        if (closeBtn) {
          ev.preventDefault();
          closeModal();
          return;
        }
        if (modal && modal.style.display === 'block') {
          const inside = ev.target.closest && ev.target.closest('.bib-panel');
          if (!inside && ev.target.closest && ev.target.closest('.bib-overlay')) {
            closeModal();
          }
        }
      });

      document.addEventListener('keydown', (ev) => {
        if (ev.key === 'Escape') {
          closeModal();
        }
      });

      if (selectBtn) {
        selectBtn.addEventListener('click', () => {
          bibContent.focus();
          bibContent.select();
        });
      }
      if (copyBtn) {
        copyBtn.addEventListener('click', async () => {
          try {
            const txt = bibContent.value || '';
            if (!txt) return;
            if (navigator.clipboard && navigator.clipboard.writeText) {
              await navigator.clipboard.writeText(txt);
              const orig = copyBtn.innerHTML;
              copyBtn.innerHTML = 'Copied';
              setTimeout(() => { copyBtn.innerHTML = orig; }, 1200);
            } else {
              bibContent.select();
              document.execCommand && document.execCommand('copy');
              const orig = copyBtn.innerHTML;
              copyBtn.innerHTML = 'Copied';
              setTimeout(() => { copyBtn.innerHTML = orig; }, 1200);
            }
          } catch(e){
            alert('Copy failed — select the BibTeX manually and copy.');
          }
        });
      }

      document.addEventListener('focus', function(ev){
        if (!modal) return;
        if (modal.style.display !== 'block') return;
        const inside = ev.target.closest && ev.target.closest('.bib-panel');
        if (!inside) {
          bibContent.focus();
        }
      }, true);

    })();
  </script>
</section>

<style>
.icon-chip {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: .4rem;
  padding: .35rem .45rem;
  border-radius: .5rem;
  border: 1px solid rgba(var(--muted-text-color), 0.08);
  background: rgba(var(--card-bg-rgb), 0.92);
  font-size: .85rem;
  text-decoration: none;
  color: rgba(var(--text-color), 1);
}
.icon-chip:hover { transform: translateY(-1px); }
.pub-filter.active { box-shadow: 0 8px 24px rgba(2,6,23,0.06); }
.pub-article.is-clickable:hover { box-shadow: 0 10px 30px rgba(2,6,23,0.06); transform: translateY(-2px); }

.icon-chip img { display: block; height: 1rem; width: 1rem; object-fit: contain; }
.bib-open-btn { cursor: pointer; border: 1px solid rgba(var(--muted-text-color),0.08); background: rgba(var(--card-bg-rgb),0.94); }

.bib-modal { position: fixed; inset: 0; z-index: 9999; display:flex; align-items:center; justify-content:center; }
.bib-overlay { position: absolute; inset:0; background: rgba(2,6,23,0.45); display:flex; align-items:center; justify-content:center; padding: 1.25rem; }
.bib-panel { position: relative; width: min(900px, 96%); background: rgba(var(--card-bg-rgb), 0.98); border-radius: 12px; padding: 1rem; box-shadow: 0 20px 60px rgba(2,6,23,0.3); border: 1px solid rgba(var(--muted-text-color),0.08); }
.bib-header { display:flex; align-items:center; gap:0.75rem; }
.bib-close-btn { margin-left:auto; font-size:1.25rem; background:transparent; border:0; cursor:pointer; color: rgba(var(--text-color),0.8); }
.bib-body { margin-top:0.6rem; max-height: 60vh; overflow:auto; }
.bib-actions .icon-chip { padding: 0.45rem 0.7rem; }

@media (max-width:640px) {
  .bib-panel { width: 96%; padding: 0.8rem; }
  .icon-chip img { height: 1.05rem; width: 1.05rem; }
}
</style>
