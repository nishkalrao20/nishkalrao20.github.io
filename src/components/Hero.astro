---
import { siteConfig } from "../config";
---
<div
  id="hero"
  class="relative isolate overflow-hidden bg-white dark:bg-slate-900 py-24 md:h-screen"
  style={`--accent-color: ${siteConfig.accentColor}; --mouse-x: 50%; --mouse-y: 20%`}
>
  <div class="absolute inset-0 -z-10 hero-bg"></div>

  <script is:inline>
    (function initAccentAndPersistedTheme(){
      try {
        const hex = `${siteConfig.accentColor}`?.trim() || '#1d4ed8';
        const h = hex.replace('#','');
        const rgb = (h.length === 3)
          ? [parseInt(h[0]+h[0],16), parseInt(h[1]+h[1],16), parseInt(h[2]+h[2],16)]
          : [parseInt(h.slice(0,2),16), parseInt(h.slice(2,4),16), parseInt(h.slice(4,6),16)];
        document.documentElement.style.setProperty('--accent-rgb', rgb.join(','));
      } catch(e)
  
      try {
        const ls = localStorage.getItem('theme'); // 'dark' | 'light' | null
        if (ls === 'dark') document.documentElement.classList.add('dark');
        else if (ls === 'light') document.documentElement.classList.remove('dark');
      } catch(e)
    })();
  </script>

  <style>
    :global(html) {
      --hero-stop-accent-1: rgba(var(--accent-rgb,29,78,216), 0.04);
      --hero-stop-accent-2: rgba(var(--accent-rgb,29,78,216), 0.02);
      --hero-stop-mid: rgba(255,255,255,0.98);
      --hero-end: #ffffff;
      --symbols-opacity: 0.02;
      --symbol-text-alpha: 0.06;
      --hero-text: #111827;
    }

    :global(html.dark) {
      --hero-stop-accent-1: rgba(var(--accent-rgb,29,78,216), 0.20);
      --hero-stop-accent-2: rgba(var(--accent-rgb,29,78,216), 0.10);
      --hero-stop-mid: rgba(0,0,0,0.6);
      --hero-end: #0b1220;
      --symbols-opacity: 0.18;
      --symbol-text-alpha: 0.18;
      --hero-text: #ffffff;
    }

    .hero-bg {
      transition: background-position 120ms linear, background 180ms linear;
      background: radial-gradient(
        1000px 1400px at var(--mouse-x) var(--mouse-y),
        var(--hero-stop-accent-1) 0%,
        var(--hero-stop-accent-2) 12%,
        var(--hero-stop-mid) 35%,
        var(--hero-end) 100%
      );
      background-blend-mode: normal;
    }
  
    .hero-content { color: var(--hero-text); }
    .hero-content svg { stroke: currentColor; fill: none; }
    .hero-content svg.fill-current { fill: currentColor; stroke: none; }
  
    @keyframes fadeIn { from { opacity: 0; transform: translateY(20px);} to { opacity:1; transform: translateY(0);} }
    .animate-fade-in { animation: fadeIn 0.8s ease-out forwards; opacity: 0; }
    .animation-delay-200 { animation-delay: 0.2s; }
    .animation-delay-400 { animation-delay: 0.4s; }
    .animation-delay-600 { animation-delay: 0.6s; }
  </style>

  <svg 
    aria-hidden="true" 
    class="hero-bg-svg absolute inset-0 -z-10 size-full [mask-image:radial-gradient(100%_100%_at_top_right,white,transparent)]">
  <defs>
    <pattern 
      x="50%" 
      y={-1} 
      id="grid-pattern" 
      width={200} 
      height={200} 
      patternUnits="userSpaceOnUse"
    >
      <path d="M.5 200V.5H200" fill="none" style="stroke: rgba(var(--accent-rgb,29,78,216), var(--symbols-opacity)); stroke-width: 1" />
    </pattern>

    <pattern
        id="programming-symbols"
        x="0"
        y="0"
        width="400"
        height="400"
        patternUnits="userSpaceOnUse"
      >
        <text x="50"  y="50"  style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="24" transform="rotate(-15)">&lt;/&gt;</text>
        <text x="150" y="100" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="20" transform="rotate(10)">{}</text>
        <text x="250" y="80"  style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="18" transform="rotate(-5)">=&gt;</text>
        <text x="100" y="200" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="22" transform="rotate(15)">[]</text>
        <text x="300" y="180" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="20" transform="rotate(-10)">&lt;&gt;</text>
        <text x="200" y="250" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="24" transform="rotate(5)">()</text>
        <text x="50"  y="320" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="18" transform="rotate(-8)">::</text>
        <text x="350" y="300" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="22" transform="rotate(12)">==</text>
        <text x="150" y="350" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="20" transform="rotate(-15)">++</text>
        <text x="250" y="370" style="fill: rgba(var(--accent-rgb), var(--symbol-text-alpha));" font-family="monospace" font-size="24" transform="rotate(8)">;</text>
      </pattern>
    </defs>

    <rect fill="url(#programming-symbols)" width="100%" height="100%" style="opacity:var(--symbols-opacity)"></rect>
    <rect fill="url(#grid-pattern)" width="100%" height="100%" stroke-width={0} style="opacity:calc(var(--symbols-opacity) * 0.6)"></rect>
  </svg>

  <div class="h-full mx-auto p-8 sm:p-12 md:p-24 flex items-center hero-content">
    <div>
      <h2 class="text-pretty text-xl sm:text-2xl md:text-5xl font-bold tracking-tight text-current animate-fade-in">
        Hello! ðŸ‘‹
      </h2>

      <h1 class="mt-6 sm:mt-8 md:mt-10 text-pretty text-4xl sm:text-5xl md:text-6xl lg:text-8xl font-bold tracking-tight text-current animate-fade-in animation-delay-200">
        I'm <span style={`color: ${siteConfig.accentColor}`}>{siteConfig.name}</span>
      </h1>

      <p class="mt-4 sm:mt-6 md:mt-8 text-pretty text-base sm:text-lg md:text-xl/8 font-medium text-current animate-fade-in animation-delay-400">
        {siteConfig.title}
      </p>
    </div>
  </div>

  <div class="absolute bottom-0 left-0 right-0 p-8 sm:p-12 md:p-24 flex gap-x-4 sm:gap-x-6 md:gap-x-8 text-current animate-fade-in animation-delay-600">
    {siteConfig.social?.email && (
      <a href={`mailto:${siteConfig.social.email}`} aria-label="Email" class="transition-colors duration-300 hover:text-[var(--accent-color)]">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8">
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M3 7a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2v-10z" />
          <path d="M3 7l9 6l9 -6" />
        </svg>
      </a>
    )}
    {siteConfig.social?.github && (
      <a href={siteConfig.social.github} target="_blank" rel="noopener noreferrer" aria-label="GitHub" class="transition-colors duration-300 hover:text-[var(--accent-color)]">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8">
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5" />
        </svg>
      </a>
    )}
    {siteConfig.social?.twitter && (
      <a href={siteConfig.social.twitter} target="_blank" rel="noopener noreferrer" aria-label="Twitter" class="transition-colors duration-300 hover:text-[var(--accent-color)]">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8">
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M4 4l11.733 16h4.267l-11.733 -16z" /> <path d="M4 20l6.768 -6.768m2.46 -2.46l6.772 -6.772"/> </>
        </svg>
      </a>
    )}
    {siteConfig.social?.instagram && (
      <a href={siteConfig.social.instagram} target="_blank" rel="noopener noreferrer" aria-label="Instagram" class="transition-colors duration-300 hover:text-[var(--accent-color)]">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8">
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M4 4m0 4a4 4 0 0 1 4 -4h8a4 4 0 0 1 4 4v8a4 4 0 0 1 -4 4h-8a4 4 0 0 1 -4 -4z" /> <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"/> <path d="M16.5 7.5l0 .01" /> </>
        </svg>
      </a>
    )}
    {siteConfig.social?.blog && (
      <a href={siteConfig.social.blog} target="_blank" rel="noopener noreferrer" aria-label="Blog" class="transition-colors duration-300 hover:text-[var(--accent-color)]">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="h-6 w-6 sm:h-7 sm:w-7 md:h-8 md:w-8">
          <path stroke="none" d="M0 0h24v24H0z" fill="none" />
          <path d="M8 21h8a5 5 0 0 0 5 -5v-3a3 3 0 0 0 -3 -3h-1v-2a5 5 0 0 0 -5 -5h-4a5 5 0 0 0 -5 5v8a5 5 0 0 0 5 5z" /> <path d="M7 7m0 1.5a1.5 1.5 0 0 1 1.5 -1.5h3a1.5 1.5 0 0 1 1.5 1.5v0a1.5 1.5 0 0 1 -1.5 1.5h-3a1.5 1.5 0 0 1 -1.5 -1.5z" /> <path d="M7 14m0 1.5a1.5 1.5 0 0 1 1.5 -1.5h7a1.5 1.5 0 0 1 1.5 1.5v0a1.5 1.5 0 0 1 -1.5 1.5h-7a1.5 1.5 0 0 1 -1.5 -1.5z" />" /> </>
        </svg>
      </a>
    )}

</div>
</div>

<script is:inline>
  (function setAccentRGB(){
    const hex = `${siteConfig.accentColor}`?.trim() || '#1d4ed8'; // server-side injected
    function hexToRgb(hex) {
      const h = hex.replace('#','');
      if (h.length === 3) {
        return [
          parseInt(h[0] + h[0], 16),
          parseInt(h[1] + h[1], 16),
          parseInt(h[2] + h[2], 16)
        ];
      }
      if (h.length === 6) {
        return [
          parseInt(h.slice(0,2), 16),
          parseInt(h.slice(2,4), 16),
          parseInt(h.slice(4,6), 16)
        ];
      }
      return [29,78,216];
    }

    const rgb = hexToRgb(hex);
    document.documentElement.style.setProperty('--accent-rgb', rgb.join(','));
  })();
</script>

<script>
  (function(){
    const hero = document.getElementById('hero');
    if(!hero) return;

    const setFromEvent = (clientX, clientY) => {
      const rect = hero.getBoundingClientRect();
      const x = Math.max(0, Math.min(rect.width, clientX - rect.left)) / rect.width * 100;
      const y = Math.max(0, Math.min(rect.height, clientY - rect.top)) / rect.height * 100;
      hero.style.setProperty('--mouse-x', x + '%');
      hero.style.setProperty('--mouse-y', y + '%');
    };

    const onPointerMove = (e) => {
      const evt = (e.touches && e.touches[0]) || e;
      setFromEvent(evt.clientX, evt.clientY);
    };

    hero.addEventListener('pointermove', onPointerMove);
    hero.addEventListener('touchmove', onPointerMove, {passive:true});

    hero.addEventListener('pointerdown', (e) => {
      const evt = (e.touches && e.touches[0]) || e;
      setFromEvent(evt.clientX, evt.clientY);
    });
  })();
</script>
