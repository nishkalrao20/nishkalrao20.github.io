---
import { siteConfig } from "../config";
---

<div id="hero" class="relative isolate overflow-hidden bg-white py-24 md:h-screen"
     style={`--accent-color: ${siteConfig.accentColor}; --mouse-x: 50%; --mouse-y: 20%`}>
  <div class="absolute inset-0 -z-10 hero-bg"></div>

  <style>
    .hero-bg{
      background: radial-gradient(1000px 1400px at var(--mouse-x) var(--mouse-y),
                rgba(29,78,216,0.18) 0%, rgba(29,78,216,0.08) 25%,
                rgba(255,255,255,0.6) 70%, white 100%);
      transition: background-position 120ms linear;
    }
  </style>

  <svg
    aria-hidden="true"
    class="absolute inset-0 -z-10 size-full stroke-gray-200 [mask-image:radial-gradient(100%_100%_at_top_right,white,transparent)]"
    preserveAspectRatio="none"
    viewBox="0 0 1200 800"
  >
    <defs>
      <pattern
        x="50%"
        y={-1}
        id="0787a7c5-978c-4f66-83c7-11c213f99cb7"
        width={200}
        height={200}
        patternUnits="userSpaceOnUse"
      >
        <path d="M.5 200V.5H200" fill="none"></path>
      </pattern>

      <pattern
        id="programming-symbols"
        x="0"
        y="0"
        width="400"
        height="400"
        patternUnits="userSpaceOnUse"
      >
        <!-- programming symbols (existing style) -->
        <text x="50"  y="50"  fill={siteConfig.accentColor} font-family="monospace" font-size="24" transform="rotate(-15)" opacity="0.9">&lt;/&gt;</text>
        <text x="150" y="100" fill={siteConfig.accentColor} font-family="monospace" font-size="20" transform="rotate(10)" opacity="0.85">&#123;&#125;</text>
        <text x="250" y="80"  fill={siteConfig.accentColor} font-family="monospace" font-size="18" transform="rotate(-5)" opacity="0.8">=&gt;</text>
        <text x="100" y="200" fill={siteConfig.accentColor} font-family="monospace" font-size="22" transform="rotate(15)" opacity="0.9">[]</text>
        <text x="300" y="180" fill={siteConfig.accentColor} font-family="monospace" font-size="20" transform="rotate(-10)" opacity="0.8">&lt;&gt;</text>
        <text x="200" y="250" fill={siteConfig.accentColor} font-family="monospace" font-size="24" transform="rotate(5)" opacity="0.9">()</text>
        <text x="50"  y="320" fill={siteConfig.accentColor} font-family="monospace" font-size="18" transform="rotate(-8)" opacity="0.75">::</text>
        <text x="350" y="300" fill={siteConfig.accentColor} font-family="monospace" font-size="22" transform="rotate(12)" opacity="0.75">==</text>
        <text x="150" y="350" fill={siteConfig.accentColor} font-family="monospace" font-size="20" transform="rotate(-15)" opacity="0.7">++</text>
        <text x="250" y="370" fill={siteConfig.accentColor} font-family="monospace" font-size="24" transform="rotate(8)" opacity="0.7">;</text>

        <!-- --- subtle LaTeX / GR symbols --- -->
        <!-- Use HTML entities for backslash and braces to avoid template parsing issues -->
        <text x="30"  y="120" fill={siteConfig.accentColor} font-family="serif" font-size="20" transform="rotate(-20)" opacity="0.16" font-weight="600">&#92;mathcal&#123;R&#125;</text>
        <text x="120" y="40"  fill={siteConfig.accentColor} font-family="serif" font-size="18" transform="rotate(8)"  opacity="0.12">&#92;Gamma</text>
        <!-- G_{mu nu} as G_{Î¼Î½} using entities for underscore and greek letters -->
        <text x="220" y="140" fill={siteConfig.accentColor} font-family="monospace" font-size="18" transform="rotate(-6)" opacity="0.14">G&#95;&#123;&#956;&#957;&#125;</text>
        <text x="320" y="60"  fill={siteConfig.accentColor} font-family="serif" font-size="22" transform="rotate(10)" opacity="0.12">&#92;nabla</text>
        <text x="80"  y="230" fill={siteConfig.accentColor} font-family="serif" font-size="20" transform="rotate(14)" opacity="0.1">&#92;ell</text>
        <text x="260" y="220" fill={siteConfig.accentColor} font-family="serif" font-size="18" transform="rotate(-12)" opacity="0.11">&#92;partial</text>
        <text x="190" y="320" fill={siteConfig.accentColor} font-family="serif" font-size="20" transform="rotate(6)" opacity="0.13">&#92;mathcal&#123;G&#125;</text>
        <text x="310" y="330" fill={siteConfig.accentColor} font-family="serif" font-size="16" transform="rotate(-8)" opacity="0.09">&#92;psi</text>
        <text x="50"  y="370" fill={siteConfig.accentColor} font-family="serif" font-size="16" transform="rotate(12)" opacity="0.09">&#92;times</text>
      </pattern>
    </defs>

    <!-- apply the pattern as a subtle overlay -->
    <rect fill="url(#programming-symbols)" width="100%" height="100%" opacity="0.22"></rect>
    <rect fill="url(#0787a7c5-978c-4f66-83c7-11c213f99cb7)" width="100%" height="100%" stroke-width={0}></rect>
  </svg>

  <div class="h-full mx-auto p-8 sm:p-12 md:p-24 flex items-center">
    <div>
      <h2
        class="text-pretty text-xl sm:text-2xl md:text-5xl font-bold tracking-tight text-gray-700 animate-fade-in"
      >
        Hello! ðŸ‘‹
      </h2>
      <h1
        class="mt-6 sm:mt-8 md:mt-10 text-pretty text-4xl sm:text-5xl md:text-6xl lg:text-8xl font-bold tracking-tight text-gray-800 animate-fade-in animation-delay-200"
      >
        I'm <span style={{ color: siteConfig.accentColor }}
          >{siteConfig.name}</span
        >
      </h1>
      <p
        class="mt-4 sm:mt-6 md:mt-8 text-pretty text-base sm:text-lg md:text-xl/8 font-medium text-gray-600 animate-fade-in animation-delay-400"
      >
        {siteConfig.title}
      </p>
    </div>
  </div>

  <div
    class="absolute bottom-0 left-0 right-0 p-8 sm:p-12 md:p-24 flex gap-x-4 sm:gap-x-6 md:gap-x-8 text-gray-700 animate-fade-in animation-delay-600"
  >
    {
      siteConfig.social?.email && (
        <a
          href={`mailto:${siteConfig.social.email}`}
          aria-label="Email"
          class="transition-colors duration-300 hover:text-[var(--accent-color)]"
        >
          <svg ...> ... </svg>
        </a>
      )
    }
    {
      siteConfig.social?.github && (
        <a
          href={siteConfig.social.github}
          target="_blank"
          rel="noopener noreferrer"
          aria-label="GitHub"
          class="transition-colors duration-300 hover:text-[var(--accent-color)]"
        >
          <svg ...> ... </svg>
        </a>
      )
    }
    <!-- other social icons unchanged -->
  </div>
</div>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fadeIn 0.8s ease-out forwards;
    opacity: 0;
  }

  .animation-delay-200 {
    animation-delay: 0.2s;
  }

  .animation-delay-400 {
    animation-delay: 0.4s;
  }

  .animation-delay-600 {
    animation-delay: 0.6s;
  }
</style>

<script>
  (function(){
    const hero = document.getElementById('hero');
    if(!hero) return;

    const setFromEvent = (clientX, clientY) => {
      const rect = hero.getBoundingClientRect();
      const x = Math.max(0, Math.min(rect.width, clientX - rect.left)) / rect.width * 100;
      const y = Math.max(0, Math.min(rect.height, clientY - rect.top)) / rect.height * 100;
      hero.style.setProperty('--mouse-x', x + '%');
      hero.style.setProperty('--mouse-y', y + '%');
    };

    const onPointerMove = (e) => {
      const evt = (e.touches && e.touches[0]) || e;
      setFromEvent(evt.clientX, evt.clientY);
    };

    hero.addEventListener('pointermove', onPointerMove);
    hero.addEventListener('touchmove', onPointerMove, {passive:true});

    hero.addEventListener('pointerdown', (e) => {
      const evt = (e.touches && e.touches[0]) || e;
      setFromEvent(evt.clientX, evt.clientY);
    });

  })();
</script>
