---
---
<button id="themeToggle" aria-label="Toggle theme" aria-pressed="false">
  <svg
    class="icon-sun"
    xmlns="http://www.w3.org/2000/svg"
    width="32"
    height="32"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    aria-hidden="true"
  >
    <defs>
      <radialGradient id="sunG" cx="50%" cy="45%" r="55%">
        <stop offset="0%" stop-color="#FFD37A"/>
        <stop offset="40%" stop-color="#FF9A3C"/>
        <stop offset="100%" stop-color="#FF6A00"/>
      </radialGradient>
    </defs>
  
    <g class="sun-rotor">
      <circle cx="12" cy="12" r="5" fill="url(#sunG)" stroke="none"></circle>
      <!-- rays (stroke uses currentColor so they adapt to theme) -->
      <line x1="12" y1="1" x2="12" y2="3"></line>
      <line x1="12" y1="21" x2="12" y2="23"></line>
      <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
      <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
      <line x1="1" y1="12" x2="3" y2="12"></line>
      <line x1="21" y1="12" x2="23" y2="12"></line>
      <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
      <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
    </g>
  </svg>

  <svg
    class="icon-moon"
    xmlns="http://www.w3.org/2000/svg"
    width="32"
    height="32"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    aria-hidden="true"
  >
    <path
      d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
    ></path>

    <g class="moon-cloud">
      <ellipse cx="16" cy="17" rx="4.5" ry="2.5" fill="currentColor" opacity="0.45"></ellipse>
      <ellipse cx="18.5" cy="16.5" rx="3" ry="2" fill="currentColor" opacity="0.5"></ellipse>
      <ellipse cx="14" cy="18" rx="2.5" ry="1.5" fill="currentColor" opacity="0.35"></ellipse>
    </g>
  </svg>
</button>

<style>
  button {
    border: none;
    background: none;
    cursor: pointer;
    padding: 4px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }

  svg {
    width: 28px;
    height: 28px;
    transition: opacity 0.3s ease, transform 0.3s ease;
  }

  .icon-sun {
    animation: spin 12s linear infinite;
  }

  .sun-rotor {
    transform-origin: 12px 12px;
    animation: rotor 18s linear infinite;
  }

  @keyframes rotor {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  

  .moon-cloud {
    animation: driftCloud 6s ease-in-out infinite;
    transform-origin: center;
  }

  @keyframes driftCloud {
    0% {
      transform: translateX(0);
    }
    50% {
      transform: translateX(3px);
    }
    100% {
      transform: translateX(0);
    }
  }

  /* Visibility toggle */
  .icon-moon {
    display: none;
  }

  :global(.dark) .icon-sun {
    display: none;
  }

  :global(.dark) .icon-moon {
    display: block;
  }
</style>

<script is:inline>
  (function () {
    const btn = document.getElementById('themeToggle');
    if (!btn) return;

    try {
      const saved = localStorage.getItem('theme');
      if (saved === 'dark') document.documentElement.classList.add('dark');
      else if (saved === 'light') document.documentElement.classList.remove('dark');
    } catch (e) {}

    const reflect = () => {
      const isDark = document.documentElement.classList.contains('dark');
      btn.setAttribute('aria-pressed', isDark ? 'true' : 'false');
    };

    btn.addEventListener('click', () => {
      document.documentElement.classList.toggle('dark');
      const isDark = document.documentElement.classList.contains('dark');
      try {
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      } catch (e) {}
      reflect();
    });

    reflect();
  })();
</script>
