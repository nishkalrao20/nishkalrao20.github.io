---
---
<button id="themeToggle" aria-label="Toggle theme" aria-pressed="false">
  <svg aria-hidden="true" width="36px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" role="img">
    <defs>
      <linearGradient id="moonGrad" x1="0" x2="1" y1="0" y2="1">
        <stop offset="0%" stop-color="#e6eefc" stop-opacity="1"/>
        <stop offset="100%" stop-color="#c6d8f8" stop-opacity="1"/>
      </linearGradient>
    </defs>

    <g class="sunWrap" transform-origin="24 24">
      <circle class="sunCore" cx="24" cy="24" r="8"/>
      <g class="sunRays" aria-hidden="true">
        <rect x="23" y="2" width="2" height="6" rx="1"/>
        <rect x="23" y="40" width="2" height="6" rx="1"/>
        <rect x="2" y="23" width="6" height="2" rx="1"/>
        <rect x="40" y="23" width="6" height="2" rx="1"/>
        <rect x="7" y="7" width="2" height="6" rx="1" transform="rotate(45 8 10)"/>
        <rect x="39" y="7" width="2" height="6" rx="1" transform="rotate(135 40 10)"/>
        <rect x="7" y="35" width="2" height="6" rx="1" transform="rotate(-45 8 38)"/>
        <rect x="39" y="35" width="2" height="6" rx="1" transform="rotate(-135 40 38)"/>
      </g>

      <g class="sunClouds" aria-hidden="true">
        <ellipse cx="34" cy="30" rx="5" ry="3"/>
        <ellipse cx="30" cy="32" rx="3.5" ry="2.2"/>
      </g>
    </g>

    <g class="moonWrap" transform-origin="24 24" aria-hidden="true">
      <path class="moonCore" d="M33 16a9 9 0 1 1-13 11 7 7 0 1 0 13-11z"/>
      <g class="moonClouds" aria-hidden="true">
        <ellipse cx="18" cy="30" rx="5" ry="3"/>
        <ellipse cx="22" cy="28" rx="3.5" ry="2.2"/>
      </g>
    </g>
  </svg>
</button>

<style>
  #themeToggle {
    border: 0;
    background: none;
    padding: 6px;
    display: inline-flex;
    align-items: center;
    cursor: pointer;
  }

  .sunCore { fill: rgb(var(--icon-sun-fill)); transition: fill .25s ease, opacity .25s ease; }
  .sunRays rect { fill: rgb(var(--icon-sun-fill)); transition: fill .25s ease, opacity .25s ease; rx:1; }
  .sunClouds ellipse { fill: rgba(var(--bg-color), 0.85); transition: opacity .35s ease, transform .35s ease; }

  .moonCore { fill: url(#moonGrad); transition: opacity .25s ease, transform .25s ease; opacity: 0; transform: scale(0.9); }
  .moonClouds ellipse { fill: rgba(255,255,255,0.06); transition: opacity .35s ease, transform .35s ease; opacity: 0; }

  .sunWrap { transform-origin: 24px 24px; animation: sunRotate 12s linear infinite; }
  @keyframes sunRotate { from { transform: rotate(0deg) } to { transform: rotate(360deg) } }

  .sunClouds { animation: cloudFloat 6s ease-in-out infinite; transform-origin: center; }
  .moonClouds { animation: cloudFloat 8s ease-in-out infinite reverse; transform-origin: center; }
  @keyframes cloudFloat { 0% { transform: translateX(0) } 50% { transform: translateX(-2px) } 100% { transform: translateX(0) } }

  :global(.dark) .sunCore,
  :global(.dark) .sunRays rect {
    opacity: 0;
    transform: scale(0.8);
  }
  :global(.dark) .sunClouds { opacity: 0; transform: translateY(4px) }

  :global(.dark) .moonCore,
  :global(.dark) .moonClouds {
    opacity: 1;
    transform: scale(1);
  }

  #themeToggle svg { width: 36px; height: 36px; display:block; }
</style>

<script is:inline>
  (function(){
    const btn = document.getElementById('themeToggle');
    if (!btn) return;

    try {
      const stored = localStorage.getItem('theme');
      if (stored === 'dark') document.documentElement.classList.add('dark');
      else if (stored === 'light') document.documentElement.classList.remove('dark');
    } catch (e) {}

    const reflect = () => btn.setAttribute('aria-pressed', document.documentElement.classList.contains('dark') ? 'true' : 'false');
    reflect();

    const handleToggleClick = () => {
      const el = document.documentElement;
      el.classList.toggle('dark');
      const isDark = el.classList.contains('dark');
      try { localStorage.setItem('theme', isDark ? 'dark' : 'light'); } catch (e) {}
      reflect();
    };

    btn.addEventListener('click', handleToggleClick);

    window.addEventListener('storage', (ev) => {
      if (ev.key === 'theme') reflect();
    });
  })();
</script>
