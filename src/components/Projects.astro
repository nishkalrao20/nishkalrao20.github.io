---
import { siteConfig } from "../config";
const projects = siteConfig.projects ?? [];
const hasProjects = projects.length > 0;

let counter = 0;
const displayText = projects.map((p) => {
  if (p.label) {
    return p.label;
  } else {
    counter += 1;
    return String(counter).padStart(2, "0");
  }
});
---
{ hasProjects && (
  <section id="projects" class="p-8 sm:p-12 md:p-16 lg:p-24">
    <div>
      <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
        <div class="lg:col-span-4">
          <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
            Projects
          </h2>
          <div
            class="w-[75px] h-[5px] mt-2 rounded-full"
            style={`background-color: ${siteConfig.accentColor}`}
          />
        </div>

        <div class="lg:col-span-8">
          <div class="space-y-8">
            {projects.map((project, index) => {
              const isInternal = project.slug && project.slug.length > 0;
              const href = isInternal ? `/projects/${project.slug}` : project.link ?? null;
              const Component = href ? "a" : "div";
              const linkProps = href
                ? {
                    href,
                    ...(href.startsWith("http") ? { target: "_blank", rel: "noopener noreferrer" } : {}),
                  }
                : {};

              const labelOrNumber = displayText[index];
              return (
                <div class="group relative" key={project.slug ?? project.name + index}>
                  <Component
                    {...linkProps}
                    class={`block relative p-4 sm:p-6 md:p-8 bg-gray-50 rounded-xl sm:rounded-2xl border border-gray-200 transition-all duration-300 ${
                      href ? "hover:bg-white hover:shadow-xl hover:border-gray-300 hover:-translate-y-1" : ""
                    }`}
                  >
                    {href && href.startsWith("http") && (
                      <div class="absolute top-4 right-4">
                        {/* external link icon (replace with your SVG or Tabler icon) */}
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 3h7v7m0 0L10 21l-7-7 11-11z" />
                        </svg>
                      </div>
                    )}
                    <div class="space-y-4">
                      <div>
                        <span class="text-sm font-mono" style={`color: ${siteConfig.accentColor}`}>
                          {labelOrNumber}
                        </span>
                        <h3 class="text-xl sm:text-2xl font-bold text-gray-900 mt-1">
                          {project.name}
                        </h3>
                      </div>

                      <p class={`text-base sm:text-lg text-gray-600 leading-relaxed ${href ? "pr-12 sm:pr-14 md:pr-16" : ""}`}>
                        {project.description}
                      </p>

                      {project.skills && project.skills.length > 0 && (
                        <div class="flex flex-wrap gap-1.5 sm:gap-2 pt-2">
                          {project.skills.map((skill) => (
                            <span class="px-2.5 sm:px-3 py-1 sm:py-1.5 bg-gray-900 text-white rounded-md sm:rounded-lg text-xs sm:text-sm font-medium transition-all duration-300">
                              {skill}
                            </span>
                          ))}
                        </div>
                      )}
                    </div>
                  </Component>
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  </section>
) }
