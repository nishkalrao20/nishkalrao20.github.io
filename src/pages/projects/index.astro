---
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { siteConfig } from '../../config';
import '../../styles/global.css';

const projects = siteConfig.projects ?? [];

const cats = [];
projects.forEach(p => {
  const c = (p.category || 'Uncategorized').trim();
  if (!cats.includes(c)) cats.push(c);
});
---
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="description" content={siteConfig.description ?? ''} />
    <title>Projects — {siteConfig.name}</title>
  </head>

  <body class="bg-page">
    <Header />

    <main class="max-w-6xl mx-auto px-6 py-12 md:py-16 lg:py-20">
      <h1 class="mb-6 text-3xl" style="font-family: var(--heading-font); font-weight:400; color: rgba(var(--text-color),1);">
        Projects
      </h1>

      <div class="mb-6 flex flex-wrap gap-3 items-center">
        <button class="project-filter active px-3 py-1 rounded-md border card-surface text-sm" data-cat="All">All</button>
        {cats.map(cat => (
          <button class="project-filter px-3 py-1 rounded-md border card-surface text-sm" data-cat={cat}>{cat}</button>
        ))}
      </div>

      <div id="projectsGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" aria-live="polite">
        {projects.map((p) => {
          const slug = p.slug ?? p.name.toLowerCase().replace(/\s+/g,'-');
          const banner = `/projects/${slug}.jpg`;
          const category = p.category ?? 'Uncategorized';
          return (
            <article data-category={category} class="project-card w-full rounded-2xl border card-surface p-0 shadow-sm transition-all duration-250" key={p.slug ?? p.name}>
              <a href={`/projects/${slug}`} class="block group focus:outline-none focus:ring-2 focus:ring-[var(--accent-color)]/20">
                <div class="h-40 sm:h-44 relative rounded-t-2xl overflow-hidden">
                  <img
                    src={banner}
                    data-src-light={banner}
                    data-src-dark={`/projects/${slug}-dark.jpg`}
                    loading="lazy"
                    alt={`${p.name} banner`}
                    class="w-full h-full object-cover bg-gray-100"
                    onerror="this.style.filter='grayscale(40%)'; this.src='/assets/projects/placeholder.jpg'"
                  />
                </div>

                <div class="p-4">
                  <div class="flex items-start justify-between gap-4">
                    <div class="flex-1">
                      <div class="text-lg leading-tight" style="font-family: var(--heading-font); font-weight:400; color: rgba(var(--text-color),1)">
                        {p.name}
                      </div>
                      <p class="mt-2 text-sm text-muted" style="font-family: var(--body-font);">
                        {p.description ? (p.description.length > 220 ? p.description.slice(0,220) + '…' : p.description) : ''}
                      </p>
                    </div>

                    <div class="text-xs text-muted self-start" style="font-family: var(--body-font);">
                      {category}
                    </div>
                  </div>

                  {p.skills && p.skills.length > 0 && (
                    <div class="mt-3 flex flex-wrap gap-2">
                      {p.skills.map(s => (
                        <span
                          class="px-2.5 py-1 rounded-md bg-gray-900 text-white text-xs sm:text-sm font-medium"
                          style="font-family: var(--body-font);"
                          key={s}
                        >
                          {s}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </a>

              <div class="px-4 pb-4">
                <div class="mt-2 flex items-center justify-between">
                  <div class="text-xs text-muted font-mono whitespace-nowrap" style="font-family: var(--body-font);">
                    {p.date ?? ''}
                  </div>

                  <div class="flex items-center gap-2">
                    {p.repo ? (
                      <a href={p.repo} target="_blank" rel="noopener noreferrer" class="icon-chip" title="View repository" aria-label="Repository">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 flex-shrink-0" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                          <path d="M12 .5C5.73.5.5 5.73.5 12c0 5.08 3.29 9.39 7.86 10.92.58.11.79-.25.79-.56 0-.28-.01-1.02-.02-2-3.2.7-3.88-1.46-3.88-1.46-.53-1.36-1.3-1.72-1.3-1.72-1.06-.72.08-.7.08-.7 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.76.41-1.27.75-1.56-2.55-.29-5.23-1.28-5.23-5.69 0-1.26.45-2.28 1.19-3.09-.12-.29-.52-1.45.11-3.02 0 0 .97-.31 3.18 1.18a11.1 11.1 0 0 1 2.9-.39c.98.01 1.98.13 2.9.39 2.2-1.5 3.17-1.18 3.17-1.18.63 1.57.23 2.73.11 3.02.74.81 1.19 1.83 1.19 3.09 0 4.42-2.69 5.4-5.25 5.68.42.36.79 1.08.79 2.18 0 1.58-.01 2.85-.01 3.24 0 .31.21.68.8.56C20.71 21.39 24 17.08 24 12c0-6.27-5.23-11.5-12-11.5z"/>
                        </svg>
                        <span class="sr-only">Repository</span>
                      </a>
                    ) : null}
                    {p.demo ? (
                      <a href={p.demo} target="_blank" rel="noopener noreferrer" class="icon-chip" title="Notes / Demo" aria-label="Notes">
                        <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.6"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/><path d="M14 2v6h6"/><path d="M8 13h8M8 17h5"/></svg>
                        <span class="sr-only">Notes</span>
                      </a>
                    ) : null}
                  </div>
                </div>
              </div>
            </article>
          );
        })}
      </div>
    </main>

    <Footer />

    <script is:inline>
      (function(){
        const buttons = Array.from(document.querySelectorAll('.project-filter'));
        const cards = Array.from(document.querySelectorAll('#projectsGrid [data-category]'));
        function setActiveButton(activeBtn) {
          buttons.forEach(b => b.classList.toggle('active', b === activeBtn));
        }
        function filter(cat) {
          cards.forEach(card => {
            if (cat === 'All' || card.getAttribute('data-category') === cat) {
              card.style.display = '';
            } else {
              card.style.display = 'none';
            }
          });
        }
        buttons.forEach(btn => {
          btn.addEventListener('click', (e) => {
            const cat = btn.getAttribute('data-cat');
            setActiveButton(btn);
            filter(cat);
          });
        });
      })();
    </script>

  </body>
</html>
