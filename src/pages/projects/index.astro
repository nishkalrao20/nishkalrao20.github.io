---
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { siteConfig } from '../../config';
import '../../styles/global.css';

const projects = siteConfig.projects ?? [];

const cats = [];
projects.forEach(p => {
  const c = (p.category || 'Uncategorized').trim();
  if (!cats.includes(c)) cats.push(c);
});
---
<html lang="en">
  <head> ... </head>

  <body class="bg-page">
    <Header />

    <section>
      <main class="max-w-6xl mx-auto px-6 py-12 pt-28 pb-24">
        <h1 class="mb-6 text-3xl" style="font-family: var(--heading-font); font-weight:400; color: rgba(var(--text-color),1);">
          Projects
        </h1>

        <div class="mb-6 flex flex-wrap gap-3 items-center">
          <button class="project-filter active px-3 py-1 rounded-md border card-surface text-sm" data-cat="All">All</button>
          {cats.map(cat => (
            <button class="project-filter px-3 py-1 rounded-md border card-surface text-sm" data-cat={cat}>{cat}</button>
          ))}
        </div>

        <div id="projectsGrid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" aria-live="polite">
          {projects.map((p) => {
            const slug = p.slug ?? p.name.toLowerCase().replace(/\s+/g,'-');
            const banner = `/projects/${slug}.jpg`;
            const category = p.category ?? 'Uncategorized';
            return (
              <article data-category={category} class="project-card w-full rounded-2xl border card-surface p-0 shadow-sm transition-all duration-250 overflow-hidden" key={p.slug ?? p.name}>
                <a href={`/projects/${slug}`} class="block group focus:outline-none focus:ring-2 focus:ring-[var(--accent-color)]/20">
                  <div class="h-40 sm:h-44 relative">
                    <img
                      src={banner}
                      data-src-light={banner}
                      data-src-dark={`/projects/${slug}-dark.jpg`}
                      loading="lazy"
                      alt={`${p.name} banner`}
                      class="w-full h-full object-cover bg-gray-100"
                      onerror="this.style.filter='grayscale(40%)'; this.src='/assets/projects/placeholder.jpg'"
                    />
                  </div>

                  <div class="p-4">
                    <div class="flex items-start justify-between gap-4">
                      <div class="flex-1">
                        <div class="text-lg leading-tight" style="font-family: var(--heading-font); font-weight:400; color: rgba(var(--text-color),1)">
                          {p.name}
                        </div>
                        <p class="mt-2 text-sm text-muted" style="font-family: var(--body-font);">
                          {p.description ? p.description.slice(0,170) : ''}
                        </p>
                      </div>

                      <div class="text-xs text-muted self-start" style="font-family: var(--body-font);">
                        {category}
                      </div>
                    </div>

                    {p.skills && p.skills.length > 0 && (
                      <div class="mt-3 flex flex-wrap gap-2">
                        {p.skills.map(s => (
                          <span
                            class="px-2.5 py-1 rounded-md bg-gray-900 text-white text-xs sm:text-sm font-medium"
                            style="font-family: var(--body-font);"
                            key={s}
                          >
                            {s}
                          </span>
                        ))}
                      </div>
                    )}
                  </div>
                </a>

                <div class="px-4 pb-4">
                  <div class="mt-2 flex items-center justify-between">
                    <div class="text-xs text-muted font-mono whitespace-nowrap truncate max-w-[40%]" style="font-family: var(--body-font);">
                      {p.date ?? ''}
                    </div>

                    <div class="flex items-center gap-2">
                      {p.repo ? (
                        <a href={p.repo} target="_blank" rel="noopener noreferrer" class="icon-chip" title="View repository" aria-label="Repository">
                          <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.6">
                            <path d="M12 .5c-6.63 0-12 5.37-12 12 0 5.3 3.44 9.8 8.2 11.4.6.1.8-.26.8-.58v-2.08c-3.34.72-4.04-1.6-4.04-1.6-.54-1.38-1.33-1.75-1.33-1.75-1.09-.75.08-.74.08-.74 1.2.09 1.83 1.24 1.83 1.24 1.07 1.83 2.8 1.3 3.48.99.11-.77.42-1.3.76-1.6-2.67-.3-5.47-1.33-5.47-5.93 0-1.31.47-2.38 1.24-3.22-.12-.3-.54-1.52.12-3.17 0 0 1.01-.32 3.3 1.23.96-.27 1.99-.4 3.01-.4 1.02 0 2.05.14 3.01.4 2.28-1.55 3.29-1.23 3.29-1.23.66 1.65.24 2.87.12 3.17.77.84 1.24 1.91 1.24 3.22 0 4.61-2.8 5.62-5.48 5.92.43.37.81 1.1.81 2.22v3.29c0 .32.2.69.82.58C20.56 22.8 24 18.3 24 13c0-6.63-5.37-12-12-12z" />
                          </svg>
                          <span class="sr-only">Repository</span>
                        </a>
                      ) : null}

                      {p.demo ? (
                        <a href={p.demo} target="_blank" rel="noopener noreferrer" class="icon-chip" title="Notes / Demo" aria-label="Notes">
                          <!-- document / notes icon -->
                          <svg viewBox="0 0 24 24" class="h-4 w-4" fill="none" stroke="currentColor" stroke-width="1.6"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/><path d="M14 2v6h6"/><path d="M8 13h8M8 17h5"/></svg>
                          <span class="sr-only">Notes</span>
                        </a>
                      ) : null}
                    </div>
                  </div>
                </div>
              </article>
            );
          })}
        </div>
      </main>
    </section>

    <Footer />

    <script is:inline>
      (function(){
        const buttons = Array.from(document.querySelectorAll('.project-filter'));
        const cards = Array.from(document.querySelectorAll('#projectsGrid [data-category]'));
        function setActiveButton(activeBtn) {
          buttons.forEach(b => b.classList.toggle('active', b === activeBtn));
        }
        function filter(cat) {
          cards.forEach(card => {
            if (cat === 'All' || card.getAttribute('data-category') === cat) {
              card.style.display = '';
            } else {
              card.style.display = 'none';
            }
          });
        }
        buttons.forEach(btn => {
          btn.addEventListener('click', (e) => {
            const cat = btn.getAttribute('data-cat');
            setActiveButton(btn);
            filter(cat);
          });
        });
      })();
    </script>

  </body>
</html>
