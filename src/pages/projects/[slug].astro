---
import Header from '../../components/Header.astro';
import { siteConfig } from '../../config';

import '../../styles/global.css';

export async function getStaticPaths() {
  const modules = import.meta.glob('../../contents/*.{md,mdx}', { eager: true });
  return Object.keys(modules).map((path) => {
    const slug = path.split('/').pop().replace(/\.mdx?$/, '').replace(/\.md$/, '');
    return { params: { slug } };
  });
}

const modules = import.meta.glob('../../contents/*.{md,mdx}', { eager: true });

const all = Object.fromEntries(
  Object.entries(modules).map(([path, mod]) => {
    const slug = path.split('/').pop().replace(/\.mdx?$/, '').replace(/\.md$/, '');
    return [slug, mod];
  })
);

const { slug } = Astro.params;
const project = all[slug];

if (!project) {
  throw new Error(`Project "${slug}" not found. Ensure src/contents/${slug}.md exists.`);
}

const ProjectContent = project.default;
const meta = project.frontmatter ?? {};
---
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{meta.title ?? slug} â€” {Astro.site?.title}</title>
    <meta name="description" content={meta.summary ?? meta.description ?? Astro.site?.description ?? ''} />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="color-scheme" content="light dark" />
    <style>
      /* static CSS that uses the --accent variable */
      .project-prose a {
        color: var(--accent);
        text-decoration: none;
        border-bottom: 1px solid rgba(0,0,0,0.06);
      }
      .project-prose a:hover { opacity: 0.9; }
      .project-meta { color: rgba(0,0,0,0.6); font-size: 0.95rem; margin-top: 0.25rem; }
    </style>
  </head>
  <!-- set the CSS variable dynamically on the body element -->
  <body class="bg-white text-gray-900" style={`--accent: ${siteConfig.accentColor};`}>
    <Header />

    <main class="max-w-4xl mx-auto px-6 md:px-8 lg:px-12 py-10">
      
      <header class="mb-6">
        <h1 class="text-3xl md:text-4xl font-bold leading-tight">{meta.title}</h1>
        {meta.date && <div class="project-meta">{meta.date}</div>}
        {meta.skills && meta.skills.length > 0 && (
          <div class="flex flex-wrap gap-2 mt-3">
            {meta.skills.map(s => (
              <span class="text-xs font-medium px-2.5 py-1 rounded bg-gray-900 text-white">{s}</span>
            ))}
          </div>
        )}
      </header>

      <article class="project-prose prose lg:prose-xl">
        <ProjectContent />
      </article>
    </main>
  </body>
</html>
