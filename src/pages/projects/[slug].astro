---
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { siteConfig } from '../../config';

import '../../styles/global.css';

export async function getStaticPaths() {
  const modules = import.meta.glob('../../contents/*.{md,mdx}', { eager: true });
  return Object.keys(modules).map((path) => {
    const slug = path.split('/').pop().replace(/\.mdx?$/, '').replace(/\.md$/, '');
    return { params: { slug } };
  });
}

const modules = import.meta.glob('../../contents/*.{md,mdx}', { eager: true });

const all = Object.fromEntries(
  Object.entries(modules).map(([path, mod]) => {
    const slug = path.split('/').pop().replace(/\.mdx?$/, '').replace(/\.md$/, '');
    return [slug, mod];
  })
);

const { slug } = Astro.params;
const project = all[slug];

if (!project) {
  throw new Error(`Project "${slug}" not found. Ensure src/contents/${slug}.md exists.`);
}

const ProjectContent = project.default;
const meta = project.frontmatter ?? {};

const normalizeSlug = (p) => (p.slug ?? (p.name ?? '').toLowerCase().replace(/\s+/g,'-'));
const cfgProject = (siteConfig.projects ?? []).find(p => normalizeSlug(p) === slug) ?? {};
const pageRepo = meta.repo ?? cfgProject.repo ?? '';
const pageDemo = meta.demo ?? cfgProject.demo ?? '';
---
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{meta.title ?? slug} â€” {Astro.site?.title}</title>
    <meta name="description" content={meta.summary ?? meta.description ?? Astro.site?.description ?? ''} />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="color-scheme" content="light dark" />
    <style>
    :root { --project-text: rgba(var(--text-color), 1); --project-muted: rgba(var(--muted-text-color), 1); }
    
    .project-header h1 {
      font-weight: 400 !important;
    }

    .project-prose {
      font-family: var(--body-font);
      color: var(--project-text);
      line-height: 1.8;
      font-size: 1.03rem;
    }

    .project-prose p {
      margin-top: 0.9rem;
      margin-bottom: 1.05rem;
      font-size: 1.02rem;
      letter-spacing: 0.0015em;
      color: var(--project-text);
      font-family: var(--body-font);
      font-weight: 400;
    }

    .project-prose .prose h1,
    .project-prose h1 {
      font-size: 1.9rem;
      margin-top: 1.6rem;
      margin-bottom: 0.6rem;
      line-height: 1.12;
      font-weight: 600;
      color: rgba(var(--text-color), 1);
      font-family: var(--heading-font);
      text-align: left;
    }
    
    .project-prose .prose h2,
    .project-prose h2 {
      font-size: 1.125rem;
      margin-top: 1.2rem;
      margin-bottom: 0.6rem;
      line-height: 1.15;
      font-weight: 600;
      color: rgba(var(--text-color), 1);
      font-family: var(--heading-font);
      text-align: left;
    }

    .project-prose ul, .project-prose ol {
      padding-left: 1.25rem;
      margin-top: 0.6rem;
      margin-bottom: 0.9rem;
      color: var(--project-text);
    }

    .project-prose pre {
      background: rgba(11,18,32,0.86);
      color: #e6eef8;
      padding: 1rem;
      border-radius: 8px;
      overflow-x: auto;
      font-size: 0.95rem;
    }
    .project-prose code {
      font-family: var(--mono-font);
      background: rgba(15,23,42,0.06);
      padding: 0.12rem 0.3rem;
      border-radius: 4px;
      color: rgba(var(--text-color), 0.95);
    }

    .project-prose .katex { font-size: 1.02rem; line-height: 1.35; }
    .project-prose .katex-display { margin: 1rem 0; }

    .skill-pill {
      display:inline-block;
      font-family: var(--body-font);
      padding: 0.25rem 0.6rem;
      border-radius: 0.5rem;
      background: rgba(var(--card-bg-rgb), 0.92);
      color: rgba(var(--text-color), 1);
      font-size: 0.75rem;
      margin-right:0.35rem;
      margin-top:0.3rem;
      font-weight: 600;
    }

    a.cite {
      color: rgba(var(--muted-text-color), 1);
      text-decoration: none;
      padding: 0 .18rem;
      border-radius: 6px;
      transition: background-color .18s ease, color .18s ease, transform .12s ease;
      display: inline-block;
      line-height: 1;
      vertical-align: baseline;
      font-weight: 500;
    }

    a.cite:hover,
    a.cite:focus {
      background: rgba(var(--accent-rgb), 0.08);
      color: var(--accent-color);
      transform: translateY(-1px);
      outline: none;
    }

    a.cite.cite-active {
      background: rgba(var(--accent-rgb), 0.12);
      color: var(--accent-color);
      box-shadow: 0 6px 20px rgba(2,6,23,0.12);
    }

    a.cite:focus-visible { box-shadow: 0 0 0 4px rgba(var(--accent-rgb),0.12); border-radius: 4px; }

    .ref-panel {
      position: absolute;
      left: 0;
      top: 0;
      width: 360px;
      max-width: 48vw;
      max-height: 60vh;
      overflow-y: auto;
      padding: 1rem;
      background: rgba(var(--card-bg-rgb), 0.78);
      backdrop-filter: blur(8px);
      -webkit-backdrop-filter: blur(8px);
      border: 1px solid rgba(var(--muted-text-color), 0.08);
      box-shadow: 0 12px 40px rgba(2,6,23,0.12);
      font-family: var(--mono-font);
      font-size: 0.95rem;
      display: none;
      z-index: 9999;
      border-radius: 10px;
      opacity: 0;
      transform: translateY(6px);
      transition: opacity .22s ease, transform .22s ease;
    }

    .ref-panel.open {
      display: block;
      opacity: 1;
      transform: translateY(0);
    }

    .ref-panel h4 { font-weight: 600; margin-bottom: .45rem; color: rgba(var(--text-color),1); }
    .ref-entry { margin-bottom: .9rem; color: rgba(var(--text-color),0.95); }

    @media (max-width: 1024px) {
      .ref-panel { position: fixed; left: 8px; right: 8px; top: 12vh; max-width: calc(100% - 16px); width: auto; }
    }
    </style>
  </head>

  <script>
    (function normalizeReferenceLinks(){
      function convert() {
        const anchors = document.querySelectorAll('.project-prose a[href^="#ref-"]');
        anchors.forEach(a => {
          try {
            const href = a.getAttribute('href');
            const id = href.replace(/^#/, '');
            a.classList.add('cite');
            a.setAttribute('data-ref', id.replace(/^ref-/, ''));
            a.setAttribute('role', 'button');
            a.setAttribute('tabindex', '0');
          } catch(e){}
        });
      }
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', convert);
      } else convert();
    })();
  </script>

  <style>
    #refContent { text-align: left; max-width: 65ch; margin: 2rem auto; }
  </style>

  <body class="bg-white text-gray-900 font-mono">
    <Header />

    <main class="max-w-4xl mx-auto px-6 md:px-8 lg:px-12 py-10 pt-28">
      
      <header class="project-header mb-6">
        <div class="flex flex-col sm:flex-row sm:items-start sm:justify-between gap-4">
          <div>
            <h1 class="text-3xl md:text-4xl leading-tight font-normal">{meta.title}</h1>
            {meta.skills && meta.skills.length > 0 && (
              <div class="flex flex-wrap gap-2 mt-3">
                {meta.skills.map(s => (
                  <span class="px-2.5 sm:px-3 py-1 sm:py-1.5 bg-gray-900 text-white rounded-md sm:rounded-lg text-xs sm:text-sm font-medium" key={s}>
                    {s}
                  </span>
                ))}
              </div>
            )}
          </div>

          <div class="flex items-start gap-3">
            {pageRepo ? (
              <a
                href={pageRepo}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2 text-sm font-mono px-3 py-2 rounded-md border card-surface shadow-sm transition-colors duration-200 ease-out hover:text-[var(--accent-color)] hover:border-[var(--accent-color)] hover:bg-[rgba(var(--accent-rgb),0.06)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-color)]/20"
                title="View repository"
                aria-label="View repository"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 flex-shrink-0" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                  <path d="M12 .5C5.73.5.5 5.73.5 12c0 5.08 3.29 9.39 7.86 10.92.58.11.79-.25.79-.56 0-.28-.01-1.02-.02-2-3.2.7-3.88-1.46-3.88-1.46-.53-1.36-1.3-1.72-1.3-1.72-1.06-.72.08-.7.08-.7 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.76.41-1.27.75-1.56-2.55-.29-5.23-1.28-5.23-5.69 0-1.26.45-2.28 1.19-3.09-.12-.29-.52-1.45.11-3.02 0 0 .97-.31 3.18 1.18a11.1 11.1 0 0 1 2.9-.39c.98.01 1.98.13 2.9.39 2.2-1.5 3.17-1.18 3.17-1.18.63 1.57.23 2.73.11 3.02.74.81 1.19 1.83 1.19 3.09 0 4.42-2.69 5.4-5.25 5.68.42.36.79 1.08.79 2.18 0 1.58-.01 2.85-.01 3.24 0 .31.21.68.8.56C20.71 21.39 24 17.08 24 12c0-6.27-5.23-11.5-12-11.5z"/>
                </svg>
                <span class="font-medium">Repo</span>
              </a>
            ) : null}

            {pageDemo ? (
              <a
                href={pageDemo}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2 text-sm font-mono px-3 py-2 rounded-md border card-surface shadow-sm transition-colors duration-200 ease-out hover:text-[var(--accent-color)] hover:border-[var(--accent-color)] hover:bg-[rgba(var(--accent-rgb),0.06)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-color)]/20"
                title="Notes"
                aria-label="Open demo"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 flex-shrink-0" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                  <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                  <path d="M8 11h8M8 15h8M8 7h4"></path>
                </svg>
                <span class="font-medium">Notes</span>
              </a>
            ) : null}
          </div>
        </div>
      </header>

      {(meta.banner ?? (`/projects/${slug}.jpg`)) ? (
        <div class="project-banner my-6">
          <img
            src={meta.banner ?? `/projects/${slug}.jpg`}
            alt={`${meta.title ?? slug} banner`}
            class="w-full rounded-lg object-cover max-h-[420px]"
            onerror="this.src='/projects/temp.jpg'"
            loading="lazy"
          />
        </div>
      ) : null}

      <article class="project-prose">
        <article class="prose prose-lg lg:prose-xl max-w-none mx-auto dark:prose-invert"><ProjectContent /></article>

        {(pageRepo || pageDemo) ? (
          <div class="mt-8 flex items-center gap-3">
            {pageRepo ? (
              <a
                href={pageRepo}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2 text-sm font-mono px-3 py-2 rounded-md border card-surface shadow-sm transition-colors duration-200 ease-out hover:text-[var(--accent-color)] hover:border-[var(--accent-color)] hover:bg-[rgba(var(--accent-rgb),0.06)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-color)]/20"
                title="View repository"
                aria-label="View repository"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 flex-shrink-0" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
                  <path d="M12 .5C5.73.5.5 5.73.5 12c0 5.08 3.29 9.39 7.86 10.92.58.11.79-.25.79-.56 0-.28-.01-1.02-.02-2-3.2.7-3.88-1.46-3.88-1.46-.53-1.36-1.3-1.72-1.3-1.72-1.06-.72.08-.7.08-.7 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.76.41-1.27.75-1.56-2.55-.29-5.23-1.28-5.23-5.69 0-1.26.45-2.28 1.19-3.09-.12-.29-.52-1.45.11-3.02 0 0 .97-.31 3.18 1.18a11.1 11.1 0 0 1 2.9-.39c.98.01 1.98.13 2.9.39 2.2-1.5 3.17-1.18 3.17-1.18.63 1.57.23 2.73.11 3.02.74.81 1.19 1.83 1.19 3.09 0 4.42-2.69 5.4-5.25 5.68.42.36.79 1.08.79 2.18 0 1.58-.01 2.85-.01 3.24 0 .31.21.68.8.56C20.71 21.39 24 17.08 24 12c0-6.27-5.23-11.5-12-11.5z"/>
                </svg>
                <span class="font-medium">Repo</span>
              </a>
            ) : null}

            {pageDemo ? (
              <a
                href={pageDemo}
                target="_blank"
                rel="noopener noreferrer"
                class="inline-flex items-center gap-2 text-sm font-mono px-3 py-2 rounded-md border card-surface shadow-sm transition-colors duration-200 ease-out hover:text-[var(--accent-color)] hover:border-[var(--accent-color)] hover:bg-[rgba(var(--accent-rgb),0.06)] focus:outline-none focus:ring-2 focus:ring-[var(--accent-color)]/20"
                title="Notes"
                aria-label="Notes"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 flex-shrink-0" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
                  <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                  <path d="M8 11h8M8 15h8M8 7h4"></path>
                </svg>
                <span class="font-medium">Demo</span>
              </a>
            ) : null}
          </div>
        ) : null}
      </article>
    </main>

  <aside id="refPanel" class="ref-panel" aria-hidden="true">
    <h4>Reference</h4>
    <div id="refContent"></div>
  </aside>
  
  <script>
  (function(){
    const refPanel = document.getElementById('refPanel');
    const refContent = document.getElementById('refContent');
    let hoverTimer = null;
    let activeCite = null;

    function showPanelForElement(el, htmlContent) {
      if (!el || !refPanel) return;
      refContent.innerHTML = htmlContent;

      refPanel.classList.add('open');
      refPanel.setAttribute('aria-hidden', 'false');

      const rect = el.getBoundingClientRect();
      const scrollX = window.scrollX || window.pageXOffset;
      const scrollY = window.scrollY || window.pageYOffset;

      const viewportWidth = document.documentElement.clientWidth;
      const viewportHeight = document.documentElement.clientHeight;

      let left = rect.right + 12 + scrollX;
      let top = rect.top + scrollY;

      const panelWidth = refPanel.offsetWidth || 320;
      const panelHeight = refPanel.offsetHeight || Math.round(viewportHeight * 0.5);

      if (left + panelWidth > viewportWidth - 12 + scrollX) {
        left = rect.left - panelWidth - 12 + scrollX;
      }
      if (left < 12 + scrollX) left = 12 + scrollX;

      if (top + panelHeight > scrollY + viewportHeight - 12) {
        top = Math.max(scrollY + 12, (scrollY + viewportHeight) - panelHeight - 12);
      }
      if (top < scrollY + 12) top = scrollY + 12;

      refPanel.style.left = `${left}px`;
      refPanel.style.top = `${top}px`;
    }

    document.addEventListener('pointerenter', (e) => {
      const el = e.target.closest && e.target.closest('a.cite[data-ref]');
      if (!el) return;
      clearTimeout(hoverTimer);
      const id = el.getAttribute('data-ref');
      const def = document.getElementById('ref-' + id);
      if (!def) return;
      const defInner = def.querySelector('.ref-entry') || def;
      if (activeCite && activeCite !== el) activeCite.classList.remove('cite-active');
      el.classList.add('cite-active');
      activeCite = el;
      showPanelForElement(el, defInner.innerHTML);
    }, true);

    document.addEventListener('pointerleave', (e) => {
      const el = e.target.closest && e.target.closest('a.cite[data-ref]');
      if (!el) return;
      hoverTimer = setTimeout(() => {
        if (el.classList.contains('cite-active')) el.classList.remove('cite-active');
        if (refPanel) {
          refPanel.classList.remove('open');
          refPanel.setAttribute('aria-hidden', 'true');
        }
        activeCite = null;
      }, 250);
    }, true);

    if (refPanel) {
      refPanel.addEventListener('pointerenter', () => clearTimeout(hoverTimer));
      refPanel.addEventListener('pointerleave', () => {
        hoverTimer = setTimeout(() => {
          if (activeCite) activeCite.classList.remove('cite-active');
          if (refPanel) {
            refPanel.classList.remove('open');
            refPanel.setAttribute('aria-hidden', 'true');
          }
          activeCite = null;
        }, 200);
      });
    }

    window.addEventListener('scroll', function() {
      if (refPanel && refPanel.classList.contains('open') && activeCite) {
        showPanelForElement(activeCite, refContent.innerHTML);
      }
    }, { passive: true });
    window.addEventListener('resize', function() {
      if (refPanel && refPanel.classList.contains('open') && activeCite) {
        showPanelForElement(activeCite, refContent.innerHTML);
      }
    });

  })();
  </script>

  <Footer />
</body>
</html>
